name: CI/CD for Dockerized ChatBot App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dockerbuild:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build The Docker Image
      run: docker build . --file Dockerfile --tag workflow-test:$(date +%s)
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

#    - name: Run tests
#      run: |
#        pytest
  docker_cicd:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.SECRET_KEY }}
            aws-region: ${{ secrets.REGION }}
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build, tag, and push docker image to Amazon ECR
          env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: testcicdgithubactions
            #IMAGE_TAG: ${{ github.sha }}
            IMAGE_TAG: ${{ github.ref_type == 'tag' && github.ref_name}}
          run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
#            aws lambda update-function-code \
#              --function-name testecrgithub \
#              --image-uri $REGISTRY/$REPOSITORY:$IMAGE_TAG